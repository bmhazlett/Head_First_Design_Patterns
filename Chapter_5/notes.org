* Why would you only need a single object of a class
** Thread pools, caches, dialog boxes, objects that handle preferences
** registry, objects for logging, and objecst that act as device drivers
* Why not global variables
** Singleton is a way of ensuring only one object but doesn't come with the 
** baggage of global varibles
** Global Variable Downsides
*** You will ALWAYS have them even if you don't need them

* The secret sauce of a singleton
** private constructor with static access to the constructor that will only
** call the constructor if the object had not yet already been made

* Singleton defined
** The Singleton Pattern ensures ta class has only one instance,
** and provdes a global point of access to it
* OH NO WHAT ABOUT MULTITHREADING
** With the original way the threading could potentially make multiple instances
** Use synchonized to fix it =D
*** This is really slow though so warning!
